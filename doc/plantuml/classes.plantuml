@startuml

class Context {
  -_example
  +expect(act,exp,msg)
  +pending(msg)
  -addResult(kind, descr)
}

class Example {
  +name
  -parent
  -body
  +addFormatter(ftr)
  +run()
  +addResult(res)
  +summarizeTo(sum)
  +formatSummary(sum)
  -formatExampleStart(ex)
  -formatExampleEnd(ex)
  -formatResult(res)
}

class Formatter {
  -dent
  +groupStart(gr)
  +exampleStart(ex)
  +result(res)
  +exampleEnd(ex)
  +groupEnd(gr)
  +summary(sum)
  -indent()
  -outdent()
}

class Group {
  -examples
  -beforeEach
  -afterEach
  -current
  +add(ex)
  +addBeforeEach(act)
  +addAfterEach(act)
  +run()
  +runAllBeforeEach(ctx)
  +addResult(res)
  +runAllAfterEach(ctx)
  +summarizeTo(sum)
  -formatGroupStart(gr)
  -formatGroupEnd(gr)
}

class Main {
  -options
  run()
}

class Result {
  +kind
  +description
}

class Spec {
  +toplevel
  -current
  +describe(name,body)
  +it(name,body)
  +beforeEach(body)
  +afterEach(body)
}

class Summary {
  -passes
  -pends
  -fails
  +add(res)
  +exitCode()
}

Main *-- Spec
Main *-- Formatter
Main *-- Summary
Spec *-- Group
Group *-- Example

Example *-- Context
Example *-- Result

Example <|-- Group

@enduml
